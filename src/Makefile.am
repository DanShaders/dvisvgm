## This file is part of dvisvgm
## Copyright (C) 2005-2007 Martin Gieseking <martin.gieseking@uos.de>
##
## Process this file with automake.
## $Id$

bin_PROGRAMS         = dvisvgm
noinst_LIBRARIES     = libdvisvgm.a

dvisvgm_SOURCES      = cmdline.h gzstream.h cmdline.c StreamCounter.h \
							  dvisvgm.cpp gzstream.cpp
							  
dvisvgm_LDADD        = $(noinst_LIBRARIES) @EXTRA_LIBS@ ../potracelib/libpotrace.a
dvisvgm_DEPENDENCIES = $(noinst_LIBRARIES) @EXTRA_LIBS@

libdvisvgm_a_SOURCES = Bitmap.h BoundingBox.h Calculator.h CharmapTranslator.h Directory.h DVIActions.h \
   DVIBBoxActions.h DVIReader.h DVIToSVG.h DVIToSVGActions.h FileSystem.h Font.h FontEmitter.h \
	FontEngine.h FontGlyph.h FontManager.h FontMap.h GFReader.h GFTracer.h KPSFileFinder.h macros.h \
	Message.h MessageException.h MetafontWrapper.h PageSize.h Pair.h StreamReader.h SVGFontEmitter.h \
	SVGFontTraceEmitter.h TFM.h TransformationMatrix.h types.h VectorStream.h VFActions.h VFReader.h \
	XMLDocTypeNode.h XMLDocument.h XMLNode.h XMLString.h \
	Bitmap.cpp BoundingBox.cpp Calculator.cpp CharmapTranslator.cpp Directory.cpp DVIActions.cpp DVIReader.cpp \
	DVIToSVG.cpp DVIToSVGActions.cpp FileSystem.cpp Font.cpp FontEngine.cpp FontGlyph.cpp \
  	FontManager.cpp FontMap.cpp GFReader.cpp GFTracer.cpp KPSFileFinder.cpp Message.cpp MetafontWrapper.cpp \
	PageSize.cpp StreamReader.cpp SVGFontEmitter.cpp SVGFontTraceEmitter.cpp TFM.cpp TransformationMatrix.cpp \
	VFReader.cpp XMLDocument.cpp XMLNode.cpp XMLString.cpp

EXTRA_DIST = miktex-kps.h miktex-core.def miktex-kps.def options.ggo getopt.h getopt.c getopt1.c 

AM_CXXFLAGS = -I../potracelib -Wall

# the commandline parser is generated by gengetopt (gets version number from config.h)
cmdline.c: options.ggo
	gengetopt --unamed-opts --no-help --no-version < $<
	sed -e "/Usage:/ s/\.\.\. \[FILES\]\.\.\./ dvifile/" \
	    -e "s/ (default=\`\?\([^']\+\)'\?)/(default: \1)/" $@ >$*.new
	rm $@
	mv $*.new $@

# The required MikTeX functions are declared in .def files that reference a DLL.
# It's necessary to create import libraries from these .def files. dlltool helps us
# to do that.
.def.a:
	dlltool -d $< -l $@ -U


## rules and macros for the unit test environment
## CxxTest (http://cxxtest.sourceforge.net) must be installed if you want to build 
## and run the tests!
check_PROGRAMS = test-all

# "test-all" should be automatically executed when calling "make check"
TESTS = test-all

# the tests that should be executed are implemented in the following header files
test_all_headers = tests/CalculatorTest.h tests/DirectoryTest.h tests/FontManagerTest.h tests/KPSFileFinderTest.h \
						 tests/StreamCounterTest.h tests/PageSizeTest.h tests/VectorStreamTest.h

test_all_SOURCES      = $(test_all_headers) test-all.cpp 
test_all_LDADD        = $(noinst_LIBRARIES)
test_all_DEPENDENCIES = $(noinst_LIBRARIES)

# use CxxTest to create the complete testing application
test-all.cpp: $(test_all_headers)
	cxxtestgen.pl --error-printer -o $@ $(test_all_headers)

