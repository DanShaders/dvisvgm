## This file is part of dvisvgm
## Copyright (C) 2005-2009 Martin Gieseking <martin.gieseking@uos.de>
##
## Process this file with automake.

bin_PROGRAMS         = dvisvgm
noinst_LIBRARIES     = libdvisvgm.a

dvisvgm_SOURCES      = cmdline.h gzstream.h cmdline.c StreamCounter.h \
							  dvisvgm.cpp gzstream.cpp
							  
dvisvgm_LDADD        = $(noinst_LIBRARIES) @EXTRA_LIBS@ ../potracelib/libpotrace.a
dvisvgm_DEPENDENCIES = $(noinst_LIBRARIES) @EXTRA_LIBS@

libdvisvgm_a_SOURCES = Bitmap.h BoundingBox.h BgColorSpecialHandler.h Calculator.h CharmapTranslator.h Color.h \
	ColorSpecialHandler.h Directory.h DLLoader.h DVIActions.h DVIReader.h DvisvgmSpecialHandler.h DVIToSVG.h DVIToSVGActions.h \
	EmSpecialHandler.h FileSystem.h Font.h FontCache.h FontEmitter.h FontEncoding.h FontEngine.h FontGlyph.h \
	FontManager.h FontMap.h GFReader.h GFTracer.h GFGlyphTracer.h Ghostscript.h GraphicPath.h InputBuffer.h InputReader.h FileFinder.h \
	macros.h Matrix.h Message.h MessageException.h MetafontWrapper.h PageSize.h Pair.h PSInterpreter.h PsSpecialHandler.h SpecialActions.h \
	SpecialHandler.h SpecialManager.h StreamReader.h SVGFontEmitter.h SVGFontTraceEmitter.h SVGTree.h TpicSpecialHandler.h TFM.h types.h \
	VectorStream.h VFActions.h VFReader.h XMLDocTypeNode.h XMLDocument.h XMLNode.h XMLString.h \
	BgColorSpecialHandler.cpp Bitmap.cpp BoundingBox.cpp Calculator.cpp CharmapTranslator.cpp Color.cpp ColorSpecialHandler.cpp \
	Directory.cpp DLLoader.cpp DVIActions.cpp DVIReader.cpp DvisvgmSpecialHandler.cpp DVIToSVG.cpp DVIToSVGActions.cpp EmSpecialHandler.cpp \
	FileSystem.cpp Font.cpp FontCache.cpp FontEncoding.cpp FontEngine.cpp FontGlyph.cpp FontManager.cpp FontMap.cpp \
	GFReader.cpp GFGlyphTracer.cpp GFTracer.cpp Ghostscript.cpp InputBuffer.cpp InputReader.cpp FileFinder.cpp Matrix.cpp \
	Message.cpp MetafontWrapper.cpp PageSize.cpp PSInterpreter.cpp PsSpecialHandler.cpp SpecialManager.cpp StreamReader.cpp SVGFontEmitter.cpp \
	SVGFontTraceEmitter.cpp SVGTree.cpp TFM.cpp TpicSpecialHandler.cpp VFReader.cpp XMLDocument.cpp XMLNode.cpp XMLString.cpp

EXTRA_DIST = options.ggo getopt.h getopt.c getopt1.c psdefs.psc iapi.h ierrors.h

AM_CXXFLAGS = -I../potracelib -I../../potracelib -Wall

# the commandline parser is generated by gengetopt (gets version number from config.h)
cmdline.c: options.ggo
	gengetopt --unamed-opts --no-help --no-version < $<
	sed -e "/Usage:/ s/\.\.\. \[FILES\]\.\.\./ dvifile/" \
	    -e "s/ (default=\`\?\([^']\+\)'\?)/(default: \1)/" $@ >$*.new
	rm $@
	mv $*.new $@

# The required MikTeX functions are declared in .def files that reference a DLL.
# It's necessary to create import libraries from these .def files. dlltool helps us
# to do that.
.def.a:
	dlltool -d $< -l $@ -U


# Create a C string definition containing the PostScript routines psdefs.ps needed by class PSInterpreter
psdefs.psc: psdefs.ps
	if test -f $<; then \
		ps2c PSInterpreter::PSDEFS $< >$@; \
	fi

psdefs.ps: ;


## rules and macros for the unit test environment
## CxxTest (http://cxxtest.sourceforge.net) must be installed if you want to build 
## and run the tests!
check_PROGRAMS = test-all

# "test-all" should be automatically executed when calling "make check"
TESTS = test-all

# the tests that should be executed are implemented in the following header files
test_all_headers = tests/CalculatorTest.h tests/ColorSpecialTest.h tests/DirectoryTest.h tests/FontManagerTest.h \
	tests/FontMapTest.h tests/FileFinderTest.h tests/GraphicPathTest.h tests/MatrixTest.h tests/StreamCounterTest.h \
	tests/PageSizeTest.h tests/SplittedCharInputBufferTest.h tests/StreamInputBufferTest.h tests/VectorStreamTest.h

test_all_SOURCES      = $(test_all_headers) test-all.cpp 
test_all_LDADD        = $(noinst_LIBRARIES)
test_all_DEPENDENCIES = $(noinst_LIBRARIES)

# use CxxTest to create the complete testing application
test-all.cpp: $(test_all_headers)
	cxxtestgen.pl --error-printer -o $@ $(test_all_headers)

