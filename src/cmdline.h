/* cmdline.h */

/* File autogenerated by gengetopt version 2.19  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE PACKAGE
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION VERSION
#endif

struct gengetopt_args_info
{
  int page_arg;	/* choose page to convert (default='1').  */
  char * page_orig;	/* choose page to convert original value given at command line.  */
  const char *page_help; /* choose page to convert help description.  */
  char * bbox_format_arg;	/* set format of bounding box (default='min').  */
  char * bbox_format_orig;	/* set format of bounding box original value given at command line.  */
  const char *bbox_format_help; /* set format of bounding box help description.  */
  char * output_arg;	/* set name of output file.  */
  char * output_orig;	/* set name of output file original value given at command line.  */
  const char *output_help; /* set name of output file help description.  */
  const char *stdout_help; /* write SVG output to stdout help description.  */
  int zip_arg;	/* create compressed .svgz file (default='3').  */
  char * zip_orig;	/* create compressed .svgz file original value given at command line.  */
  const char *zip_help; /* create compressed .svgz file help description.  */
  double rotate_arg;	/* rotate page content clockwise.  */
  char * rotate_orig;	/* rotate page content clockwise original value given at command line.  */
  const char *rotate_help; /* rotate page content clockwise help description.  */
  char * scale_arg;	/* scale page content.  */
  char * scale_orig;	/* scale page content original value given at command line.  */
  const char *scale_help; /* scale page content help description.  */
  char * translate_arg;	/* shift page content.  */
  char * translate_orig;	/* shift page content original value given at command line.  */
  const char *translate_help; /* shift page content help description.  */
  char * transform_arg;	/* transform page content.  */
  char * transform_orig;	/* transform page content original value given at command line.  */
  const char *transform_help; /* transform page content help description.  */
  double mag_arg;	/* magnification of Metafont output (default='4').  */
  char * mag_orig;	/* magnification of Metafont output original value given at command line.  */
  const char *mag_help; /* magnification of Metafont output help description.  */
  int specials_flag;	/* process \\specials (default=off).  */
  const char *specials_help; /* process \\specials help description.  */
  const char *help_help; /* print this help and exit help description.  */
  int verbosity_arg;	/* set verbosity level (0-7) (default='7').  */
  char * verbosity_orig;	/* set verbosity level (0-7) original value given at command line.  */
  const char *verbosity_help; /* set verbosity level (0-7) help description.  */
  const char *version_help; /* print version and exit help description.  */
  
  int page_given ;	/* Whether page was given.  */
  int bbox_format_given ;	/* Whether bbox-format was given.  */
  int output_given ;	/* Whether output was given.  */
  int stdout_given ;	/* Whether stdout was given.  */
  int zip_given ;	/* Whether zip was given.  */
  int rotate_given ;	/* Whether rotate was given.  */
  int scale_given ;	/* Whether scale was given.  */
  int translate_given ;	/* Whether translate was given.  */
  int transform_given ;	/* Whether transform was given.  */
  int mag_given ;	/* Whether mag was given.  */
  int specials_given ;	/* Whether specials was given.  */
  int help_given ;	/* Whether help was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int version_given ;	/* Whether version was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
